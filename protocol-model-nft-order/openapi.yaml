openapi: 3.0.3
info:
paths:

components:
  schemas:

    NftOrderApiError:
      required:
        - code
        - message
        - status
      type: object
      properties:
        status:
          type: integer
          format: int32
        code:
          type: string
          enum:
            - UNKNOWN
            - INVALID_ARGUMENT
            - ABSENCE_OF_REQUIRED_FIELD
            - UNLOCKABLE_API_ERROR
            - NFT_API_ERROR
            - ORDER_API_ERROR
            - UNEXPECTED_API_ERROR
        message:
          type: string

    NftOrderItem:
      type: object
      required:
        - id
        - contract
        - tokenId
        - unlockable
        - creators
        - supply
        - lazySupply
        - owners
        - royalties
        - date
        - pending
        - totalStock
        - sellers
      properties:
        id:
          type: string
          description: "Item identifier, has format '${token}:${tokenId}'"
        contract:
          $ref: "#/components/schemas/Address"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        unlockable:
          type: boolean
          description: "Was item locked"
        creators:
          type: array
          items:
            $ref: "#/components/schemas/Part"
        supply:
          $ref: "#/components/schemas/BigInteger"
        lazySupply:
          $ref: "#/components/schemas/BigInteger"
        owners:
          type: array
          description: Owners of the target items
          items:
            "$ref": "#/components/schemas/Address"
        royalties:
          type: array
          description: List of royalties
          items:
            $ref: "#/components/schemas/Part"
        date:
          type: string
          format: date-time
        pending:
          type: array
          items:
            "$ref": "#/components/schemas/ItemTransfer"
        meta:
          "$ref": "#/components/schemas/NftItemMeta"
        bestSellOrder:
          $ref: "#/components/schemas/Order"
        bestBidOrder:
          $ref: "#/components/schemas/Order"
        totalStock:
          $ref: "#/components/schemas/BigInteger"
        sellers:
          type: integer

    NftOrderDeletedItem:
      required:
        - id
        - token
        - tokenId
      type: object
      properties:
        id:
          type: string
        token:
          "$ref": "#/components/schemas/Address"
        tokenId:
          "$ref": "#/components/schemas/BigInteger"

    NftOrderItemEvent:
      required:
        - eventId
        - itemId
      properties:
        eventId:
          type: string
        itemId:
          type: string
      oneOf:
        - $ref: "#/components/schemas/NftOrderItemUpdateEvent"
        - $ref: "#/components/schemas/NftOrderItemDeleteEvent"
    NftOrderItemUpdateEvent:
      type: object
      required:
        - item
      properties:
        type:
          type: string
          enum:
            - UPDATE
        item:
          $ref: "#/components/schemas/NftOrderItem"
    NftOrderItemDeleteEvent:
      type: object
      required:
        - item
      properties:
        type:
          type: string
          enum:
            - DELETE
        item:
          $ref: "#/components/schemas/NftOrderDeletedItem"

    NftOrderOwnership:
      type: object
      required:
        - id
        - contract
        - tokenId
        - owner
        - value
        - lazyValue
        - date
        - pending
      properties:
        id:
          type: string
          description: "Ownership identifier, has format '${token}:${tokenId}:${owner}'"
        contract:
          $ref: "#/components/schemas/Address"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        owner:
          $ref: "#/components/schemas/Address"
        creators:
          type: array
          items:
            "$ref": "#/components/schemas/Part"
        value:
          $ref: "#/components/schemas/BigInteger"
        lazyValue:
          $ref: "#/components/schemas/BigInteger"
        date:
          type: string
          format: date-time
        pending:
          type: array
          description: "History of ownership"
          items:
            $ref: "#/components/schemas/ItemHistory"
        bestSellOrder:
          $ref: "#/components/schemas/Order"

    NftOrderDeletedOwnership:
      required:
        - id
        - token
        - tokenId
        - owner
      type: object
      properties:
        id:
          type: string
        token:
          "$ref": "#/components/schemas/Address"
        tokenId:
          "$ref": "#/components/schemas/BigInteger"
        owner:
          "$ref": "#/components/schemas/Address"

    NftOrderOwnershipEvent:
      required:
        - eventId
        - ownershipId
      properties:
        eventId:
          type: string
        ownershipId:
          type: string
      oneOf:
        - $ref: "#/components/schemas/NftOrderOwnershipUpdateEvent"
        - $ref: "#/components/schemas/NftOrderOwnershipDeleteEvent"
    NftOrderOwnershipUpdateEvent:
      type: object
      required:
        - ownership
      properties:
        type:
          type: string
          enum:
            - UPDATE
        ownership:
          $ref: "#/components/schemas/NftOrderOwnership"
    NftOrderOwnershipDeleteEvent:
      type: object
      required:
        - ownership
      properties:
        type:
          type: string
          enum:
            - DELETE
        ownership:
          $ref: "#/components/schemas/NftOrderDeletedOwnership"

    NftOrderOwnershipsPage:
      required:
        - data
      type: object
      properties:
        continuation:
          type: string
          description: Continuation token to paginate the search result
        data:
          type: array
          description: List of found data items
          items:
            "$ref": "#/components/schemas/NftOrderOwnership"

    NftOrderItemsPage:
      required:
        - data
      type: object
      properties:
        continuation:
          type: string
          description: Continuation token to paginate the search result
        data:
          type: array
          description: List of found data items
          items:
            "$ref": "#/components/schemas/NftOrderItem"
