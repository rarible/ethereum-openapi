openapi: 3.0.3
info:
paths:

components:
  schemas:

    Ids:
      required:
        - items
      type: object
      properties:
        continuation:
          type: string
          description: Continuation token to paginate ids search result
        items:
          type: array
          description: List of found ids
          items:
            type: string

    OrderActivities:
      required:
        - items
      type: object
      properties:
        continuation:
          type: string
          description: Continuation token to paginate items search result
        items:
          type: array
          description: List of found activities
          items:
            "$ref": "#/components/schemas/OrderActivity"

    EthereumOrderDataApiError:
      required:
        - code
        - message
      type: object
      properties:
        status:
          default: 400
          type: integer
          description: "HTTP status code"
          format: int32
        code:
          type: string
          description: "Error type. `BAD_REQUEST` - incorrect format of input data, `VALIDATION` - input data format is correct, but its content doesn't meet requirements of API call, `INCORRECT_ORDER_DATA` - asset type specified in the wrong way"
          enum:
            - BAD_REQUEST
            - VALIDATION
            - INCORRECT_ORDER_DATA
        message:
          type: string
          description: "Error message"

    EthereumOrderUpdateApiError:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: "Error type. `INCORRECT_SIGNATURE` - incorrect signature, `INCORRECT_ORDER_DATA` - asset type specified in the wrong way, `INCORRECT_LAZY_ASSET` - lazy minting asset specified in the wrong way, `ORDER_CANCELED` - the specified order has been canceled, `ORDER_INVALID_UPDATE` - the order has been updated incorrectly, 'INCORRECT_PRICE' - incorrect order price"
          enum:
            - INCORRECT_SIGNATURE
            - INCORRECT_ORDER_DATA
            - INCORRECT_PRICE
            - INCORRECT_LAZY_ASSET
            - ORDER_CANCELED
            - ORDER_INVALID_UPDATE
        message:
          type: string
        status:
          default: 400
          type: integer
          format: int32

    OrderBid:
      type: object
      required:
        - orderHash
        - status
        - maker
        - make
        - take
        - fill
        - makeStock
        - cancelled
        - salt
        - createdAt
      properties:
        orderHash:
          $ref: "#/components/schemas/Word"
        status:
          $ref: "#/components/schemas/OrderBidStatus"
        maker:
          $ref: "#/components/schemas/Address"
        taker:
          $ref: "#/components/schemas/Address"
        make:
          $ref: "#/components/schemas/Asset"
        take:
          $ref: "#/components/schemas/Asset"
        makeBalance:
          $ref: "#/components/schemas/BigInteger"
        makePriceUsd:
          $ref: "#/components/schemas/BigDecimal"
        takePriceUsd:
          $ref: "#/components/schemas/BigDecimal"
        fill:
          $ref: "#/components/schemas/BigInteger"
        makeStock:
          $ref: "#/components/schemas/BigInteger"
        cancelled:
          type: boolean
        salt:
          $ref: "#/components/schemas/Binary"
        signature:
          $ref: "#/components/schemas/Binary"
        createdAt:
          type: string
          format: date-time
      oneOf:
        - "$ref": "#/components/schemas/LegacyOrderBid"
        - "$ref": "#/components/schemas/RaribleV2OrderBid"
        - "$ref": "#/components/schemas/OpenSeaV1OrderBid"
        - "$ref": "#/components/schemas/SeaportV1OrderBid"
        - "$ref": "#/components/schemas/CryptoPunksOrderBid"
        - "$ref": "#/components/schemas/LooksRareOrderBid"
        - "$ref": "#/components/schemas/LooksRareV2OrderBid"
        - "$ref": "#/components/schemas/X2Y2OrderBid"
        - "$ref": "#/components/schemas/AmmOrderBid"

    LegacyOrderBid:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - RARIBLE_V1
        data:
          $ref: "#/components/schemas/OrderDataLegacy"

    RaribleV2OrderBid:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - RARIBLE_V2
        data:
          $ref: "#/components/schemas/OrderRaribleV2Data"

    OpenSeaV1OrderBid:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - OPEN_SEA_V1
        data:
          $ref: "#/components/schemas/OrderOpenSeaV1DataV1"

    SeaportV1OrderBid:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - SEAPORT_V1
        data:
          $ref: "#/components/schemas/OrderSeaportDataV1"

    CryptoPunksOrderBid:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - CRYPTO_PUNKS

    LooksRareOrderBid:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - LOOKSRARE
        data:
          $ref: "#/components/schemas/OrderLooksRareDataV1"

    LooksRareV2OrderBid:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - LOOKSRARE_V2
        data:
          $ref: "#/components/schemas/OrderLooksRareDataV2"

    X2Y2OrderBid:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - X2Y2
        data:
          $ref: "#/components/schemas/OrderX2Y2Data"

    AmmOrderBid:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - AMM
        data:
          $ref: "#/components/schemas/OrderAmmDataV1"

    OrderStatus:
      type: string
      enum:
        - ACTIVE
        - FILLED
        - INACTIVE
        - CANCELLED

    OrderBidStatus:
      type: string
      enum:
        - ACTIVE
        - FILLED
        - INACTIVE
        - CANCELLED

    EncodedOrderData:
      type: object
      required:
        - type
        - data
      properties:
        type:
          $ref: "#/components/schemas/Binary"
        data:
          $ref: "#/components/schemas/Binary"

    SignMessage:
      type: object
      oneOf:
        - "$ref": "#/components/schemas/EIP712SignMessage"
        - "$ref": "#/components/schemas/TextSignMessage"

    EIP712SignMessage:
      type: object
      required:
        - "@type"
        - domain
        - struct
        - structType
        - types
      properties:
        "@type":
          type: string
          enum:
            - EIP712
        domain:
          "$ref": "#/components/schemas/EIP712Domain"
        struct:
          "$ref": "#/components/schemas/ObjectNode"
        structType:
          type: string
        types:
          "$ref": "#/components/schemas/ObjectNode"

    EIP712Domain:
      type: object
      required:
        - name
        - version
        - chainId
        - verifyingContract
      properties:
        name:
          type: string
        version:
          type: string
        chainId:
          $ref: "#/components/schemas/BigInteger"
        verifyingContract:
          "$ref": "#/components/schemas/Address"

    TextSignMessage:
      type: object
      required:
        - "@type"
        - message
      properties:
        "@type":
          type: string
          enum:
            - TEXT
        message:
          type: string

    EncodedOrder:
      type: object
      required:
        - orderHash
        - signMessage
        - signHash
      properties:
        orderHash:
          $ref: "#/components/schemas/Word"
        signHash:
          $ref: "#/components/schemas/Word"
        signMessage:
          "$ref": "#/components/schemas/SignMessage"
        transferProxyAddress:
          "$ref": "#/components/schemas/Address"

    OrderExchangeHistory:
      type: object
      required:
        - hash
        - date
      properties:
        hash:
          $ref: "#/components/schemas/Word"
        make:
          $ref: "#/components/schemas/Asset"
        take:
          $ref: "#/components/schemas/Asset"
        date:
          type: string
          format: date-time
        maker:
          $ref: "#/components/schemas/Address"
      oneOf:
        - "$ref": "#/components/schemas/OrderCancel"
        - "$ref": "#/components/schemas/OrderSideMatch"
        - "$ref": "#/components/schemas/OnChainOrder"
        - "$ref": "#/components/schemas/OnChainAmmOrder"

    ItemBuy:
      type: object
      required:
        - fill
      properties:
        type:
          type: string
          enum:
            - BUY
        fill:
          $ref: "#/components/schemas/BigInteger"
        buyer:
          $ref: "#/components/schemas/Address"

    OrderSide:
      type: string
      enum:
        - LEFT
        - RIGHT

    OrderSideMatch:
      type: object
      required:
        - type
        - fill
      properties:
        type:
          type: string
          enum:
            - ORDER_SIDE_MATCH
        side:
          $ref: "#/components/schemas/OrderSide"
        fill:
          $ref: "#/components/schemas/BigInteger"
        taker:
          $ref: "#/components/schemas/Address"
        counterHash:
          $ref: "#/components/schemas/Word"
        makeUsd:
          $ref: "#/components/schemas/BigDecimal"
        takeUsd:
          $ref: "#/components/schemas/BigDecimal"
        makePriceUsd:
          $ref: "#/components/schemas/BigDecimal"
        takePriceUsd:
          $ref: "#/components/schemas/BigDecimal"

    OrderCancel:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - CANCEL
        owner:
          $ref: "#/components/schemas/Address"

    OnChainOrder:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - ON_CHAIN_ORDER

    OnChainAmmOrder:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - ON_CHAIN_AMM_ORDER

    OrderBidsPagination:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderBid"
        continuation:
          type: string

    OrderData:
      type: object
      oneOf:
        - "$ref": "#/components/schemas/OrderRaribleV2Data"
        - "$ref": "#/components/schemas/OrderDataLegacy"
        - "$ref": "#/components/schemas/OrderOpenSeaV1DataV1"
        - "$ref": "#/components/schemas/OrderSeaportDataV1"
        - "$ref": "#/components/schemas/OrderCryptoPunksData"
        - "$ref": "#/components/schemas/OrderLooksRareDataV1"
        - "$ref": "#/components/schemas/OrderLooksRareDataV2"
        - "$ref": "#/components/schemas/OrderX2Y2Data"
        - "$ref": "#/components/schemas/OrderAmmDataV1"

    OrderRaribleV2Data:
      type: object
      oneOf:
        - "$ref": "#/components/schemas/OrderRaribleV2DataV1"
        - "$ref": "#/components/schemas/OrderRaribleV2DataV2"
        - "$ref": "#/components/schemas/OrderRaribleV2DataV3"
        - "$ref": "#/components/schemas/OrderRaribleV2DataV3Sell"
        - "$ref": "#/components/schemas/OrderRaribleV2DataV3Buy"

    OrderRaribleV2DataV1:
      type: object
      description: "Order data for create or update"
      required:
        - dataType
        - payouts
        - originFees
      properties:
        dataType:
          type: string
          description: "Data type of the order"
          enum:
            - RARIBLE_V2_DATA_V1
        payouts:
          type: array
          description: "Value of the payouts for the order"
          items:
            "$ref": "#/components/schemas/Part"
        originFees:
          type: array
          description: "Value of the origin fees for the order"
          items:
            "$ref": "#/components/schemas/Part"

    OrderRaribleV2DataV2:
      type: object
      description: "Order data for create or update"
      required:
        - dataType
        - payouts
        - originFees
        - isMakeFill
      properties:
        dataType:
          type: string
          description: "Data type of the order"
          enum:
            - RARIBLE_V2_DATA_V2
        payouts:
          type: array
          description: "Value of the payouts for the order"
          items:
            "$ref": "#/components/schemas/Part"
        originFees:
          type: array
          description: "Value of the origin fees for the order"
          items:
            "$ref": "#/components/schemas/Part"
        isMakeFill:
          type: boolean
          description: "If true, the 'fill' part of the order applies to the 'make' side, otherwise to the 'take' side"

    OrderRaribleV2DataV3:
      type: object
      description: "Order data for create or update"
      required:
        - dataType
        - payouts
        - originFees
        - isMakeFill
      properties:
        dataType:
          type: string
          description: "Data type of the order"
          enum:
            - RARIBLE_V2_DATA_V3
        payouts:
          type: array
          description: "Value of the payouts for the order"
          items:
            "$ref": "#/components/schemas/Part"
        originFees:
          type: array
          description: "Value of the origin fees for the order"
          items:
            "$ref": "#/components/schemas/Part"
        isMakeFill:
          type: boolean
          description: "If true, the 'fill' part of the order applies to the 'make' side, otherwise to the 'take' side"

    OrderRaribleV2DataV3Sell:
      description: "Order data for create or update"
      type: object
      required:
        - dataType
        - maxFeesBasePoint
      properties:
        dataType:
          type: string
          description: "Data type of the order"
          enum:
            - RARIBLE_V2_DATA_V3_SELL
        payout:
          $ref: "#/components/schemas/Part"
        originFeeFirst:
          $ref: "#/components/schemas/Part"
        originFeeSecond:
          $ref: "#/components/schemas/Part"
        maxFeesBasePoint:
          type: integer
        marketplaceMarker:
          $ref: "#/components/schemas/Word"

    OrderRaribleV2DataV3Buy:
      description: "Order data for create or update"
      type: object
      required:
        - dataType
      properties:
        dataType:
          type: string
          description: "Data type of the order"
          enum:
            - RARIBLE_V2_DATA_V3_BUY
        payout:
          $ref: "#/components/schemas/Part"
        originFeeFirst:
          $ref: "#/components/schemas/Part"
        originFeeSecond:
          $ref: "#/components/schemas/Part"
        marketplaceMarker:
          $ref: "#/components/schemas/Word"

    OrderDataLegacy:
      type: object
      description: "Order data for create or update"
      required:
        - fee
        - dataType
      properties:
        dataType:
          type: string
          description: "Data type of the order"
          enum:
            - LEGACY
        fee:
          type: integer
          description: "Fee value for operation"

    OrderOpenSeaV1DataV1:
      type: object
      required:
        - dataType
        - exchange
        - makerRelayerFee
        - takerRelayerFee
        - makerProtocolFee
        - takerProtocolFee
        - feeRecipient
        - feeMethod
        - side
        - saleKind
        - howToCall
        - callData
        - replacementPattern
        - staticTarget
        - staticExtraData
        - extra
      properties:
        dataType:
          type: string
          enum:
            - OPEN_SEA_V1_DATA_V1
        exchange:
          $ref: "#/components/schemas/Address"
        makerRelayerFee:
          $ref: "#/components/schemas/BigInteger"
        takerRelayerFee:
          $ref: "#/components/schemas/BigInteger"
        makerProtocolFee:
          $ref: "#/components/schemas/BigInteger"
        takerProtocolFee:
          $ref: "#/components/schemas/BigInteger"
        feeRecipient:
          $ref: "#/components/schemas/Address"
        feeMethod:
          type: string
          enum:
            - PROTOCOL_FEE
            - SPLIT_FEE
        side:
          type: string
          enum:
            - BUY
            - SELL
        saleKind:
          type: string
          enum:
            - FIXED_PRICE
            - DUTCH_AUCTION
        howToCall:
          type: string
          enum:
            - CALL
            - DELEGATE_CALL
        callData:
          $ref: "#/components/schemas/Binary"
        replacementPattern:
          $ref: "#/components/schemas/Binary"
        staticTarget:
          $ref: "#/components/schemas/Address"
        staticExtraData:
          $ref: "#/components/schemas/Binary"
        extra:
          $ref: "#/components/schemas/BigInteger"
        target:
          $ref: "#/components/schemas/Address"

    OrderSeaportDataV1:
      type: object
      oneOf:
        - "$ref": "#/components/schemas/OrderBasicSeaportDataV1"

    SeaportOrderType:
      type: string
      enum:
        - FULL_OPEN
        - PARTIAL_OPEN
        - FULL_RESTRICTED
        - PARTIAL_RESTRICTED
        - CONTRACT

    SeaportItemType:
      type: string
      enum:
        - NATIVE
        - ERC20
        - ERC721
        - ERC1155
        - ERC721_WITH_CRITERIA
        - ERC1155_WITH_CRITERIA

    OrderBasicSeaportDataV1:
      type: object
      required:
        - dataType
        - protocol
        - orderType
        - offer
        - consideration
        - zone
        - zoneHash
        - conduitKey
      properties:
        dataType:
          type: string
          enum:
            - BASIC_SEAPORT_DATA_V1
        protocol:
          $ref: "#/components/schemas/Address"
        orderType:
          $ref: "#/components/schemas/SeaportOrderType"
        offer:
          type: array
          items:
            $ref: "#/components/schemas/SeaportOffer"
        consideration:
          type: array
          items:
            $ref: "#/components/schemas/SeaportConsideration"
        zone:
          $ref: "#/components/schemas/Address"
        zoneHash:
          $ref: "#/components/schemas/Word"
        conduitKey:
          $ref: "#/components/schemas/Word"
        counter:
          deprecated: true
          type: integer
          format: int64
        nonce:
          $ref: "#/components/schemas/BigInteger"

    SeaportOffer:
      type: object
      required:
        - itemType
        - token
        - identifierOrCriteria
        - startAmount
        - endAmount
      properties:
        itemType:
          $ref: "#/components/schemas/SeaportItemType"
        token:
          $ref: "#/components/schemas/Address"
        identifierOrCriteria:
          $ref: "#/components/schemas/BigInteger"
        startAmount:
          $ref: "#/components/schemas/BigInteger"
        endAmount:
          $ref: "#/components/schemas/BigInteger"

    SeaportConsideration:
      type: object
      required:
        - itemType
        - token
        - identifierOrCriteria
        - startAmount
        - endAmount
        - recipient
      properties:
        itemType:
          $ref: "#/components/schemas/SeaportItemType"
        token:
          $ref: "#/components/schemas/Address"
        identifierOrCriteria:
          $ref: "#/components/schemas/BigInteger"
        startAmount:
          $ref: "#/components/schemas/BigInteger"
        endAmount:
          $ref: "#/components/schemas/BigInteger"
        recipient:
          $ref: "#/components/schemas/Address"

    OrderCryptoPunksData:
      type: object
      required:
        - dataType
      properties:
        dataType:
          type: string
          enum:
            - CRYPTO_PUNKS_DATA

    OrderX2Y2Data:
      type: object
      required:
        - dataType
        - itemHash
        - isCollectionOffer
        - isBundle
        - orderId
        - side
      properties:
        dataType:
          type: string
          enum:
            - X2Y2_DATA
        itemHash:
          $ref: "#/components/schemas/Word"
        isCollectionOffer:
          type: boolean
        isBundle:
          type: boolean
        side:
          type: integer
        orderId:
          $ref: "#/components/schemas/BigInteger"

    OrderLooksRareDataV1:
      type: object
      required:
        - dataType
        - minPercentageToAsk
        - strategy
        - nonce
      properties:
        dataType:
          type: string
          enum:
            - LOOKSRARE_DATA_V1
        minPercentageToAsk:
          type: integer
        strategy:
          $ref: "#/components/schemas/Address"
        nonce:
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/Binary"

    OrderLooksRareDataV2:
      type: object
      required:
        - quoteType
        - globalNonce
        - orderNonce
        - subsetNonce
        - strategyId
        - additionalParameters
      properties:
        dataType:
          type: string
          enum:
            - LOOKSRARE_DATA_V2
        quoteType:
          type: string
          enum:
            - BID
            - ASK
        globalNonce:
          $ref: "#/components/schemas/BigInteger"
        orderNonce:
          $ref: "#/components/schemas/BigInteger"
        subsetNonce:
          $ref: "#/components/schemas/BigInteger"
        strategyId:
          $ref: "#/components/schemas/BigInteger"
        additionalParameters:
          $ref: "#/components/schemas/Binary"
        merkleRoot:
          $ref: "#/components/schemas/Binary"
        merkleProof:
          type: array
          items:
            $ref: "#/components/schemas/LooksRareMerkleProof"

    LooksRareMerkleProof:
      type: object
      required:
        - position
        - value
      properties:
        position:
          type: integer
          format: int64
        value:
          $ref: "#/components/schemas/Binary"

    OrderAmmDataV1:
      type: object
      required:
        - poolAddress
      properties:
        poolAddress:
          $ref: "#/components/schemas/Address"
      oneOf:
        - "$ref": "#/components/schemas/OrderSudoSwapAmmDataV1"

    SudoSwapPoolType:
      type: string
      enum:
        - TOKEN
        - NFT
        - TRADE

    SudoSwapCurveType:
      type: string
      enum:
        - LINEAR
        - EXPONENTIAL
        - UNKNOWN

    OrderSudoSwapAmmDataV1:
      type: object
      required:
        - dataType
        - bondingCurve
        - curveType
        - assetRecipient
        - poolType
        - delta
        - fee
        - feeDecimal
      properties:
        dataType:
          type: string
          enum:
            - SUDOSWAP_AMM_DATA_V1
        bondingCurve:
          $ref: "#/components/schemas/Address"
        curveType:
          $ref: "#/components/schemas/SudoSwapCurveType"
        assetRecipient:
          $ref: "#/components/schemas/Address"
        poolType:
          $ref: "#/components/schemas/SudoSwapPoolType"
        delta:
          $ref: "#/components/schemas/BigInteger"
        fee:
          $ref: "#/components/schemas/BigInteger"
        feeDecimal:
          type: integer

    HoldNftItemIds:
      type: object
      required:
        - ids
      properties:
        ids:
          type: array
          description: "List of nft item ids hold by AMM order"
          items:
            type: string
        continuation:
          type: string

    AmmPriceInfo:
      type: object
      required:
        - price
        - priceValue
      properties:
        price:
          $ref: "#/components/schemas/BigInteger"
        priceValue:
          $ref: "#/components/schemas/BigDecimal"
        priceUsd:
          $ref: "#/components/schemas/BigDecimal"

    AmmTradeInfo:
      type: object
      required:
        - prices
      properties:
        prices:
          type: array
          items:
            $ref: "#/components/schemas/AmmPriceInfo"

    Order:
      type: object
      required:
        - maker
        - make
        - take
        - fill
        - makeStock
        - cancelled
        - salt
        - createdAt
        - lastUpdateAt
        - hash
      properties:
        maker:
          $ref: "#/components/schemas/Address"
        taker:
          $ref: "#/components/schemas/Address"
        make:
          $ref: "#/components/schemas/Asset"
        take:
          $ref: "#/components/schemas/Asset"
        fill:
          $ref: "#/components/schemas/BigInteger"
        fillValue:
          $ref: "#/components/schemas/BigDecimal"
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        makeStock:
          $ref: "#/components/schemas/BigInteger"
        makeStockValue:
          $ref: "#/components/schemas/BigDecimal"
        cancelled:
          type: boolean
        optionalRoyalties:
          type: boolean
        salt:
          $ref: "#/components/schemas/Word"
        signature:
          $ref: "#/components/schemas/Binary"
        createdAt:
          type: string
          format: date-time
        lastUpdateAt:
          type: string
          format: date-time
        dbUpdatedAt:
          type: string
          format: date-time
        pending:
          type: array
          items:
            $ref: "#/components/schemas/OrderExchangeHistory"
        id:
          type: string
        hash:
          $ref: "#/components/schemas/Word"
        makeBalance:
          $ref: "#/components/schemas/BigInteger"
        makePrice:
          $ref: "#/components/schemas/BigDecimal"
        takePrice:
          $ref: "#/components/schemas/BigDecimal"
        makePriceUsd:
          deprecated: true
          $ref: "#/components/schemas/BigDecimal"
        takePriceUsd:
          deprecated: true
          $ref: "#/components/schemas/BigDecimal"
        priceHistory:
          type: array
          deprecated: true
          default: [ ]
          items:
            $ref: "#/components/schemas/OrderPriceHistoryRecord"
        status:
          $ref: "#/components/schemas/OrderStatus"
        version:
          type: integer
          description: "Logical version of this order, incremented each time when the order is updated"
          format: int64


      oneOf:
        - "$ref": "#/components/schemas/LegacyOrder"
        - "$ref": "#/components/schemas/RaribleV2Order"
        - "$ref": "#/components/schemas/OpenSeaV1Order"
        - "$ref": "#/components/schemas/SeaportV1Order"
        - "$ref": "#/components/schemas/CryptoPunkOrder"
        - "$ref": "#/components/schemas/X2Y2Order"
        - "$ref": "#/components/schemas/LooksRareOrder"
        - "$ref": "#/components/schemas/LooksRareV2Order"
        - "$ref": "#/components/schemas/AmmOrder"

    LegacyOrder:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - RARIBLE_V1
        data:
          $ref: "#/components/schemas/OrderDataLegacy"

    RaribleV2Order:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - RARIBLE_V2
        data:
          $ref: "#/components/schemas/OrderRaribleV2Data"

    OpenSeaV1Order:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - OPEN_SEA_V1
        data:
          $ref: "#/components/schemas/OrderOpenSeaV1DataV1"

    SeaportV1Order:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - SEAPORT_V1
        data:
          $ref: "#/components/schemas/OrderSeaportDataV1"

    CryptoPunkOrder:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - CRYPTO_PUNK
        data:
          $ref: "#/components/schemas/OrderCryptoPunksData"

    X2Y2Order:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - X2Y2
        data:
          $ref: "#/components/schemas/OrderX2Y2Data"

    LooksRareOrder:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - LOOKSRARE
        data:
          $ref: "#/components/schemas/OrderLooksRareDataV1"

    LooksRareV2Order:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - LOOKSRARE_V2
        data:
          $ref: "#/components/schemas/OrderLooksRareDataV2"

    AmmOrder:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - AMM
        data:
          $ref: "#/components/schemas/OrderAmmDataV1"

    OrderPriceHistoryRecord:
      type: object
      deprecated: true
      required:
        - date
        - makeValue
        - takeValue
      properties:
        date:
          type: string
          format: date-time
        makeValue:
          $ref: "#/components/schemas/BigDecimal"
        takeValue:
          $ref: "#/components/schemas/BigDecimal"

    EthOrderFees:
      type: object
      required:
        - fees
      properties:
        fees:
          type: object
          additionalProperties:
            type: integer

    OrderIds:
      type: object
      required:
        - ids
      properties:
        ids:
          type: array
          description: "List of the orders hash"
          items:
            type: string

    OrderForm:
      type: object
      required:
        - maker
        - make
        - take
        - signature
        - salt
        - end
      properties:
        maker:
          $ref: "#/components/schemas/Address"
        taker:
          $ref: "#/components/schemas/Address"
        make:
          $ref: "#/components/schemas/OrderFormAsset"
        take:
          $ref: "#/components/schemas/OrderFormAsset"
        salt:
          $ref: "#/components/schemas/BigInteger"
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        signature:
          $ref: "#/components/schemas/Binary"
      oneOf:
        - "$ref": "#/components/schemas/LegacyOrderForm"
        - "$ref": "#/components/schemas/RaribleV2OrderForm"

    OrderFormAsset:
      type: object
      required:
        - assetType
        - value
      properties:
        assetType:
          $ref: "#/components/schemas/AssetType"
        value:
          $ref: "#/components/schemas/BigInteger"

    LegacyOrderForm:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          description: "Type of the order"
          enum:
            - RARIBLE_V1
        data:
          $ref: "#/components/schemas/OrderDataLegacy"

    RaribleV2OrderForm:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          description: "Type of the order"
          enum:
            - RARIBLE_V2
        data:
          $ref: "#/components/schemas/OrderRaribleV2Data"

    Platform:
      type: string
      enum:
        - RARIBLE
        - OPEN_SEA
        - CRYPTO_PUNKS
        - X2Y2
        - LOOKSRARE
        - SUDOSWAP
        - BLUR

    OrderSort:
      type: string
      enum:
        - LAST_UPDATE_ASC
        - LAST_UPDATE_DESC

    OrdersPagination:
      type: object
      required:
        - orders
      properties:
        orders:
          type: array
          description: "Orders list"
          items:
            $ref: "#/components/schemas/Order"
        continuation:
          type: string
          description: "Continuation token from the previous response"

    OrderCurrencies:
      type: object
      description: List of distinct currencies in which payments for sell or bid orders were suggested
      required:
        - orderType
        - currencies
      properties:
        orderType:
          type: string
          enum:
            - SELL
            - BID
        currencies:
          type: array
          items:
            $ref: "#/components/schemas/AssetType"

    OrderEvent:
      type: object
      required:
        - eventId
        - orderId
      properties:
        eventId:
          type: string
        orderId:
          type: string
        eventTimeMarks:
          # TODO make it mandatory in 1.43
          $ref: "#/components/schemas/EventTimeMarks"
      oneOf:
        - "$ref": "#/components/schemas/OrderUpdateEvent"
        - "$ref": "#/components/schemas/AmmOrderNftUpdateEvent"


    OrderUpdateEvent:
      type: object
      required:
        - order
      properties:
        type:
          type: string
          enum:
            - UPDATE
        order:
          "$ref": "#/components/schemas/Order"

    AmmOrderNftUpdateEvent:
      type: object
      required:
        - inNft
        - outNft
      properties:
        type:
          type: string
          enum:
            - AMM_NFT_UPDATE
        inNft:
          type: array
          items:
            type: string
            description: "Item identifier, has format `${contract}:${tokenId}`"
        outNft:
          type: array
          items:
            type: string
            description: "Item identifier, has format `${contract}:${tokenId}`"

    NftOrdersPriceUpdateEvent:
      type: object
      required:
        - eventId
        - contract
        - tokenId
        - orders
      properties:
        eventId:
          type: string
        contract:
          $ref: "#/components/schemas/Address"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        orders:
          type: array
          items:
            "$ref": "#/components/schemas/Order"
      oneOf:
        - "$ref": "#/components/schemas/NftSellOrdersPriceUpdateEvent"
        - "$ref": "#/components/schemas/NftBidOrdersPriceUpdateEvent"

    NftSellOrdersPriceUpdateEvent:
      type: object
      required:
        - "@type"
      properties:
        "@type":
          type: string
          enum:
            - SELL_ORDERS_PRICE_UPDATE

    NftBidOrdersPriceUpdateEvent:
      type: object
      required:
        - "@type"
      properties:
        "@type":
          type: string
          enum:
            - BID_ORDERS_PRICE_UPDATE

    PrepareOrderTxForm:
      type: object
      required:
        - maker
        - amount
        - payouts
        - originFees
      properties:
        maker:
          "$ref": "#/components/schemas/Address"
        amount:
          "$ref": "#/components/schemas/BigInteger"
        payouts:
          type: array
          description: "Value of the payouts for the order"
          items:
            "$ref": "#/components/schemas/Part"
        originFees:
          type: array
          description: "Value of the origin fees for the order"
          items:
            "$ref": "#/components/schemas/Part"

    PrepareOrderTxResponse:
      type: object
      required:
        - asset
        - transaction
      properties:
        transferProxyAddress:
          "$ref": "#/components/schemas/Address"
        asset:
          "$ref": "#/components/schemas/Asset"
        transaction:
          "$ref": "#/components/schemas/PreparedOrderTx"

    PreparedOrderTx:
      type: object
      required:
        - to
        - data
      properties:
        to:
          "$ref": "#/components/schemas/Address"
        data:
          "$ref": "#/components/schemas/Binary"

    X2Y2OrderSignRequest:
      required:
        - caller
        - op
        - orderId
        - currency
        - price
      type: object
      properties:
        caller:
          type: string
        op:
          $ref: "#/components/schemas/BigInteger"
        orderId:
          $ref: "#/components/schemas/BigInteger"
        currency:
          $ref: "#/components/schemas/Address"
        price:
          $ref: "#/components/schemas/BigInteger"
        tokenId:
          $ref: "#/components/schemas/BigInteger"

    X2Y2GetCancelInputRequest:
      required:
        - caller
        - op
        - orderId
        - signMessage
        - sign
      type: object
      properties:
        caller:
          type: string
        op:
          $ref: "#/components/schemas/BigInteger"
        orderId:
          $ref: "#/components/schemas/BigInteger"
        signMessage:
          type: string
        sign:
          type: string

    X2Y2SignResponse:
      required:
        - input
      type: object
      properties:
        input:
          type: string

    SeaportFulfillmentSimpleResponse:
      required:
        - signature
      type: object
      properties:
        signature:
          $ref: "#/components/schemas/Binary"

    EthereumSignatureValidationForm:
      required:
        - signer
        - message
        - signature
      type: object
      properties:
        signer:
          $ref: "#/components/schemas/Address"
        message:
          type: string
        signature:
          $ref: "#/components/schemas/Binary"

    ObjectNode:
      type: object

    OrderState:
      type: object
      properties:
        canceled:
          type: boolean
      required:
        - canceled
