openapi: 3.0.3
info:
  title: OpenAPI definition
  description: Indexers use OpenAPI to describe APIs (and events). Clients (Kotlin, TypeScript, etc.) and server controller interfaces automatically generated using YAML OpenAPI files.
  version: v0.1
  license:
    name: MIT
    url: https://github.com/rarible/ethereum-indexer/blob/master/api/LICENSE
servers:
paths:

components:
  schemas:

    EthereumApiErrorEntityNotFound:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: "Error type"
          enum:
            - NOT_FOUND
        message:
          type: string
          description: "Error message"
        status:
          type: integer
          description: "HTTP status code"
          default: 404

    EthereumApiErrorBadRequest:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: "Error type. `BAD_REQUEST` - incorrect format of input data, `VALIDATION` - input data format is correct, but its content doesn't meet requirements of API call"
          enum:
            - BAD_REQUEST
            - VALIDATION
        message:
          type: string
          description: "Error message"
        status:
          type: integer
          description: "HTTP status code"
          default: 400

    EthereumApiErrorServerError:
      required:
        - code
        - message
        - status
      type: object
      properties:
        code:
          type: string
          description: "Error type"
          enum:
            - UNKNOWN
        message:
          type: string
          description: "Error message"
        status:
          type: integer
          description: "HTTP status code"
          default: 500

    Activity:
      type: object
      required:
        - id
        - date
      properties:
        id:
          type: string
          description: "Activity identifier"
        date:
          type: string
          format: date-time
          description: "Date and time when the event, related to activity, happened"
      oneOf:
        - $ref: "#/components/schemas/OrderActivity"
        - $ref: "#/components/schemas/NftActivity"
        - $ref: "#/components/schemas/AuctionActivity"

    OrderActivityMatchSide:
      type: object
      required:
        - maker
        - hash
        - asset
      properties:
        maker:
          $ref: "#/components/schemas/Address"
        hash:
          $ref: "#/components/schemas/Word"
        asset:
          $ref: "#/components/schemas/Asset"
        type:
          type: string
          enum:
            - SELL
            - BID

    OrderActivity:
      type: object
      required:
        - id
        - date
        - source
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        source:
          type: string
          enum:
            - RARIBLE
            - OPEN_SEA
            - CRYPTO_PUNKS
      oneOf:
        - $ref: "#/components/schemas/OrderActivityMatch"
        - $ref: "#/components/schemas/OrderActivityBid"
        - $ref: "#/components/schemas/OrderActivityList"
        - $ref: "#/components/schemas/OrderActivityCancelBid"
        - $ref: "#/components/schemas/OrderActivityCancelList"

    OrderActivityMatch:
      type: object
      required:
        - "@type"
        - left
        - right
        - price
        - transactionHash
        - blockHash
        - blockNumber
        - logIndex
      properties:
        "@type":
          type: string
          enum:
            - "match"
        left:
          $ref: "#/components/schemas/OrderActivityMatchSide"
        right:
          $ref: "#/components/schemas/OrderActivityMatchSide"
        price:
          $ref: "#/components/schemas/BigDecimal"
        priceUsd:
          $ref: "#/components/schemas/BigDecimal"
        transactionHash:
          $ref: "#/components/schemas/Word"
        blockHash:
          $ref: "#/components/schemas/Word"
        blockNumber:
          type: integer
          format: int64
        logIndex:
          type: integer
        type:
          type: string
          enum:
            - SELL
            - ACCEPT_BID

    OrderActivityBid:
      type: object
      required:
        - "@type"
        - hash
        - maker
        - make
        - take
        - price
      properties:
        "@type":
          type: string
          enum:
            - "bid"
        hash:
          $ref: "#/components/schemas/Word"
        maker:
          $ref: "#/components/schemas/Address"
        make:
          $ref: "#/components/schemas/Asset"
        take:
          $ref: "#/components/schemas/Asset"
        price:
          $ref: "#/components/schemas/BigDecimal"
        priceUsd:
          $ref: "#/components/schemas/BigDecimal"

    OrderActivityList:
      type: object
      required:
        - "@type"
        - hash
        - maker
        - make
        - take
        - price
      properties:
        "@type":
          type: string
          enum:
            - "list"
        hash:
          $ref: "#/components/schemas/Word"
        maker:
          $ref: "#/components/schemas/Address"
        make:
          $ref: "#/components/schemas/Asset"
        take:
          $ref: "#/components/schemas/Asset"
        price:
          $ref: "#/components/schemas/BigDecimal"
        priceUsd:
          $ref: "#/components/schemas/BigDecimal"

    OrderActivityCancelBid:
      type: object
      required:
        - "@type"
        - hash
        - maker
        - make
        - take
        - transactionHash
        - blockHash
        - blockNumber
        - logIndex
      properties:
        "@type":
          type: string
          enum:
            - "cancel_bid"
        hash:
          $ref: "#/components/schemas/Word"
        maker:
          $ref: "#/components/schemas/Address"
        make:
          $ref: "#/components/schemas/AssetType"
        take:
          $ref: "#/components/schemas/AssetType"
        transactionHash:
          $ref: "#/components/schemas/Word"
        blockHash:
          $ref: "#/components/schemas/Word"
        blockNumber:
          type: integer
          format: int64
        logIndex:
          type: integer

    OrderActivityCancelList:
      type: object
      required:
        - "@type"
        - hash
        - maker
        - make
        - take
        - transactionHash
        - blockHash
        - blockNumber
        - logIndex
      properties:
        "@type":
          type: string
          enum:
            - "cancel_list"
        hash:
          $ref: "#/components/schemas/Word"
        maker:
          $ref: "#/components/schemas/Address"
        make:
          $ref: "#/components/schemas/AssetType"
        take:
          $ref: "#/components/schemas/AssetType"
        transactionHash:
          $ref: "#/components/schemas/Word"
        blockHash:
          $ref: "#/components/schemas/Word"
        blockNumber:
          type: integer
          format: int64
        logIndex:
          type: integer

    NftActivity:
      type: object
      required:
        - owner
        - contract
        - tokenId
        - value
        - transactionHash
        - blockHash
        - blockNumber
        - logIndex
      properties:
        owner:
          $ref: "#/components/schemas/Address"
        contract:
          $ref: "#/components/schemas/Address"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        value:
          $ref: "#/components/schemas/BigInteger"
        transactionHash:
          $ref: "#/components/schemas/Word"
        blockHash:
          $ref: "#/components/schemas/Word"
        blockNumber:
          type: integer
          format: int64
        logIndex:
          type: integer
      oneOf:
        - $ref: "#/components/schemas/Mint"
        - $ref: "#/components/schemas/Burn"
        - $ref: "#/components/schemas/Transfer"

    Mint:
      type: object
      required:
        - "@type"
      properties:
        "@type":
          type: string
          enum:
            - "mint"

    Burn:
      type: object
      required:
        - "@type"
      properties:
        "@type":
          type: string
          enum:
            - "burn"

    Transfer:
      type: object
      required:
        - "@type"
        - from
      properties:
        "@type":
          type: string
          enum:
            - "transfer"
        from:
          $ref: "#/components/schemas/Address"

    AuctionActivity:
      type: object
      required:
        - id
        - date
        - source
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        source:
          type: string
          enum:
            - RARIBLE
      oneOf:
        - $ref: "#/components/schemas/AuctionActivityOpen"
        - $ref: "#/components/schemas/AuctionActivityBid"
        - $ref: "#/components/schemas/AuctionActivityFinish"
        - $ref: "#/components/schemas/AuctionActivityCancel"

    AuctionActivityOpen:
      type: object
      required:
        - "@type"
        - hash
        - seller
        - sell
        - buy
        - minimalStep
        - minimalPrice
        - transactionHash
        - blockHash
        - blockNumber
        - logIndex
      properties:
        "@type":
          type: string
          enum:
            - "auction_open"
        seller:
          $ref: "#/components/schemas/Address"
        sell:
          $ref: "#/components/schemas/Asset"
        buy:
          $ref: "#/components/schemas/AssetType"
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        duration:
          $ref: "#/components/schemas/BigInteger"
        minimalStep:
          $ref: "#/components/schemas/BigDecimal"
        minimalPrice:
          $ref: "#/components/schemas/BigDecimal"
        transactionHash:
          $ref: "#/components/schemas/Word"
        blockHash:
          $ref: "#/components/schemas/Word"
        blockNumber:
          type: integer
          format: int64
        logIndex:
          type: integer
        hash:
          $ref: "#/components/schemas/Word"

    AuctionActivityBid:
      type: object
      required:
        - "@type"
        - hash
        - bid
        - transactionHash
        - blockHash
        - blockNumber
        - logIndex
      properties:
        "@type":
          type: string
          enum:
            - "auction_bid"
        hash:
          $ref: "#/components/schemas/Word"
        bid:
          $ref: "#/components/schemas/AuctionBid"
        transactionHash:
          $ref: "#/components/schemas/Word"
        blockHash:
          $ref: "#/components/schemas/Word"
        blockNumber:
          type: integer
          format: int64
        logIndex:
          type: integer

    AuctionActivityFinish:
      type: object
      required:
        - "@type"
        - hash
        - transactionHash
        - blockHash
        - blockNumber
        - logIndex
      properties:
        "@type":
          type: string
          enum:
            - "auction_finish"
        hash:
          $ref: "#/components/schemas/Word"
        transactionHash:
          $ref: "#/components/schemas/Word"
        blockHash:
          $ref: "#/components/schemas/Word"
        blockNumber:
          type: integer
          format: int64
        logIndex:
          type: integer

    AuctionActivityCancel:
      type: object
      required:
        - "@type"
        - hash
        - transactionHash
        - blockHash
        - blockNumber
        - logIndex
      properties:
        "@type":
          type: string
          enum:
            - "auction_cancel"
        hash:
          $ref: "#/components/schemas/Word"
        transactionHash:
          $ref: "#/components/schemas/Word"
        blockHash:
          $ref: "#/components/schemas/Word"
        blockNumber:
          type: integer
          format: int64
        logIndex:
          type: integer

    Activities:
      type: object
      required:
        - items
      properties:
        continuation:
          type: string
          description: "Continuation token from the previous response"
        items:
          type: array
          description: "Items array"
          items:
            $ref: "#/components/schemas/Activity"

    ActivityContinuation:
      type: object
      required:
        - afterDate
        - afterId
      properties:
        afterDate:
          type: string
          format: date-time
        afterId:
          type: string

    ActivitySort:
      type: string
      enum:
        - LATEST_FIRST
        - EARLIEST_FIRST

    ActivityFilter:
      type: object
      oneOf:
        - $ref: "#/components/schemas/ActivityFilterAll"
        - $ref: "#/components/schemas/ActivityFilterByUser"
        - $ref: "#/components/schemas/ActivityFilterByItem"
        - $ref: "#/components/schemas/ActivityFilterByCollection"

    ActivityFilterAll:
      type: object
      required:
        - "@type"
        - types
      properties:
        "@type":
          type: string
          enum:
            - "all"
        types:
          type: array
          items:
            $ref: "#/components/schemas/ActivityFilterAllType"

    ActivityFilterAllType:
      type: string
      enum:
        - TRANSFER
        - MINT
        - BURN
        - BID
        - LIST
        - SELL

    ActivityFilterByUser:
      type: object
      required:
        - "@type"
        - types
        - users
      properties:
        "@type":
          type: string
          enum:
            - "by_user"
        users:
          type: array
          items:
            $ref: "#/components/schemas/Address"
        types:
          type: array
          items:
            $ref: "#/components/schemas/ActivityFilterByUserType"
        from:
          type: integer
          format: int64
        to:
          type: integer
          format: int64

    ActivityFilterByUserType:
      type: string
      enum:
        - TRANSFER_FROM
        - TRANSFER_TO
        - MINT
        - BURN
        - MAKE_BID
        - GET_BID
        - LIST
        - BUY
        - SELL

    ActivityFilterByItem:
      type: object
      required:
        - "@type"
        - contract
        - tokenId
        - types
      properties:
        "@type":
          type: string
          enum:
            - "by_item"
        contract:
          $ref: "#/components/schemas/Address"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        types:
          type: array
          items:
            $ref: "#/components/schemas/ActivityFilterByItemType"

    ActivityFilterByItemType:
      type: string
      enum:
        - TRANSFER
        - MINT
        - BURN
        - BID
        - LIST
        - MATCH

    ActivityFilterByCollection:
      type: object
      required:
        - "@type"
        - contract
        - types
      properties:
        "@type":
          type: string
          enum:
            - "by_collection"
        contract:
          $ref: "#/components/schemas/Address"
        types:
          type: array
          items:
            $ref: "#/components/schemas/ActivityFilterByCollectionType"

    ActivityFilterByCollectionType:
      type: string
      enum:
        - TRANSFER
        - MINT
        - BURN
        - BID
        - LIST
        - MATCH

    NftActivityFilter:
      type: object
      oneOf:
        - $ref: "#/components/schemas/NftActivityFilterAll"
        - $ref: "#/components/schemas/NftActivityFilterByUser"
        - $ref: "#/components/schemas/NftActivityFilterByItem"
        - $ref: "#/components/schemas/NftActivityFilterByCollection"

    NftActivityFilterAll:
      type: object
      required:
        - "@type"
        - types
      properties:
        "@type":
          type: string
          enum:
            - "all"
        types:
          type: array
          items:
            type: string
            description: "Type of the NFT activity"
            enum:
              - TRANSFER
              - MINT
              - BURN

    NftActivityFilterByUser:
      type: object
      required:
        - "@type"
        - types
        - users
      properties:
        "@type":
          type: string
          enum:
            - "by_user"
        users:
          type: array
          description: "List of NFT users"
          items:
            $ref: "#/components/schemas/Address"
        types:
          type: array
          items:
            type: string
            description: "Type of the NFT activity"
            enum:
              - TRANSFER_FROM
              - TRANSFER_TO
              - MINT
              - BURN
        from:
          type: integer
          format: int64
        to:
          type: integer
          format: int64

    NftActivityFilterByItem:
      type: object
      required:
        - "@type"
        - contract
        - tokenId
        - types
      properties:
        "@type":
          type: string
          enum:
            - "by_item"
        contract:
          $ref: "#/components/schemas/Address"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        types:
          type: array
          description: "Type of the NFT activity"
          items:
            type: string
            enum:
              - TRANSFER
              - MINT
              - BURN

    NftActivityFilterByCollection:
      type: object
      required:
        - "@type"
        - contract
        - types
      properties:
        "@type":
          type: string
          enum:
            - "by_collection"
        contract:
          $ref: "#/components/schemas/Address"
        types:
          type: array
          description: "Type of the NFT activity"
          items:
            type: string
            enum:
              - TRANSFER
              - MINT
              - BURN

    OrderActivityFilter:
      type: object
      oneOf:
        - $ref: "#/components/schemas/OrderActivityFilterAll"
        - $ref: "#/components/schemas/OrderActivityFilterByUser"
        - $ref: "#/components/schemas/OrderActivityFilterByItem"
        - $ref: "#/components/schemas/OrderActivityFilterByCollection"

    OrderActivityFilterAll:
      type: object
      required:
        - "@type"
        - types
      properties:
        "@type":
          type: string
          enum:
            - "all"
        types:
          type: array
          items:
            type: string
            description: "Order activity type"
            enum:
              - BID
              - LIST
              - MATCH

    OrderActivityFilterByUser:
      type: object
      required:
        - "@type"
        - types
        - users
      properties:
        "@type":
          type: string
          enum:
            - "by_user"
        users:
          type: array
          description: "List of users"
          items:
            $ref: "#/components/schemas/Address"
        types:
          type: array
          items:
            type: string
            description: "Order activity type by user"
            enum:
              - MAKE_BID
              - GET_BID
              - LIST
              - BUY
              - SELL
        from:
          type: integer
          format: int64
        to:
          type: integer
          format: int64

    OrderActivityFilterByItem:
      type: object
      required:
        - "@type"
        - contract
        - tokenId
        - types
      properties:
        "@type":
          type: string
          enum:
            - "by_item"
        contract:
          $ref: "#/components/schemas/Address"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        types:
          type: array
          items:
            type: string
            description: "Order activity type"
            enum:
              - BID
              - LIST
              - MATCH

    OrderActivityFilterByCollection:
      type: object
      required:
        - "@type"
        - contract
        - types
      properties:
        "@type":
          type: string
          enum:
            - "by_collection"
        contract:
          $ref: "#/components/schemas/Address"
        types:
          type: array
          items:
            type: string
            description: "Order activity type"
            enum:
              - BID
              - LIST
              - MATCH

    ItemHistory:
      type: object
      required:
        - contract
        - tokenId
        - date
      properties:
        owner:
          "$ref": "#/components/schemas/Address"
        contract:
          "$ref": "#/components/schemas/Address"
        tokenId:
          "$ref": "#/components/schemas/BigInteger"
        value:
          "$ref": "#/components/schemas/BigInteger"
        date:
          type: string
          format: date-time
      description: History of item
      oneOf:
        - "$ref": "#/components/schemas/ItemRoyalty"
        - "$ref": "#/components/schemas/ItemTransfer"

    ItemRoyalty:
      required:
        - type
        - royalties
      type: object
      properties:
        type:
          type: string
          enum:
            - ROYALTY
        royalties:
          type: array
          items:
            "$ref": "#/components/schemas/Part"

    ItemTransfer:
      required:
        - type
        - owner
        - value
        - from
      type: object
      properties:
        type:
          type: string
          enum:
            - TRANSFER
        from:
          "$ref": "#/components/schemas/Address"

    AssetType:
      type: object
      oneOf:
        - $ref: "#/components/schemas/EthAssetType"
        - $ref: "#/components/schemas/Erc20AssetType"
        - $ref: "#/components/schemas/Erc721AssetType"
        - $ref: "#/components/schemas/Erc1155AssetType"
        - $ref: "#/components/schemas/Erc721LazyAssetType"
        - $ref: "#/components/schemas/Erc1155LazyAssetType"
        - $ref: "#/components/schemas/CryptoPunksAssetType"
        - $ref: "#/components/schemas/CollectionAssetType"
        - $ref: "#/components/schemas/GenerativeArtAssetType"

    EthAssetType:
      type: object
      required:
        - assetClass
      properties:
        assetClass:
          type: string
          enum:
            - "ETH"

    GenerativeArtAssetType:
      required:
        - assetClass
        - contract
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - "GEN_ART"
        contract:
          $ref: "#/components/schemas/Address"

    Erc20AssetType:
      required:
        - assetClass
        - contract
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - "ERC20"
        contract:
          $ref: "#/components/schemas/Address"

    Erc721AssetType:
      required:
        - assetClass
        - contract
        - tokenId
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - "ERC721"
        contract:
          $ref: "#/components/schemas/Address"
        tokenId:
          $ref: "#/components/schemas/BigInteger"

    Erc1155AssetType:
      required:
        - assetClass
        - contract
        - tokenId
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - "ERC1155"
        contract:
          $ref: "#/components/schemas/Address"
        tokenId:
          $ref: "#/components/schemas/BigInteger"

    Erc721LazyAssetType:
      required:
        - assetClass
        - contract
        - tokenId
        - uri
        - creators
        - royalties
        - signatures
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - "ERC721_LAZY"
        contract:
          $ref: "#/components/schemas/Address"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        uri:
          type: string
        creators:
          type: array
          items:
            $ref: "#/components/schemas/Part"
        royalties:
          type: array
          items:
            $ref: "#/components/schemas/Part"
        signatures:
          type: array
          items:
            $ref: "#/components/schemas/Binary"

    Erc1155LazyAssetType:
      required:
        - assetClass
        - contract
        - tokenId
        - uri
        - supply
        - creators
        - royalties
        - signatures
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - "ERC1155_LAZY"
        contract:
          $ref: "#/components/schemas/Address"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        uri:
          type: string
        supply:
          $ref: "#/components/schemas/BigInteger"
        creators:
          type: array
          items:
            $ref: "#/components/schemas/Part"
        royalties:
          type: array
          items:
            $ref: "#/components/schemas/Part"
        signatures:
          type: array
          items:
            $ref: "#/components/schemas/Binary"

    CryptoPunksAssetType:
      required:
        - assetClass
        - contract
        - punkId
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - "CRYPTO_PUNKS"
        contract:
          $ref: "#/components/schemas/Address"
        punkId:
          type: integer

    CollectionAssetType:
      required:
        - assetClass
        - contract
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - "COLLECTION"
        contract:
          $ref: "#/components/schemas/Address"

    Asset:
      type: object
      required:
        - assetType
        - value
      properties:
        assetType:
          $ref: "#/components/schemas/AssetType"
        value:
          $ref: "#/components/schemas/BigInteger"
        valueDecimal:
          $ref: "#/components/schemas/BigDecimal"

    AuctionBid:
      type: object
      required:
        - amount
      properties:
        amount:
          $ref: "#/components/schemas/BigDecimal"
      oneOf:
        - "$ref": "#/components/schemas/RaribleAuctionV1BidV1"

    RaribleAuctionV1BidV1:
      type: object
      required:
        - data
      properties:
        type:
          type: string
          description: "Type of the auction bid"
          enum:
            - RARIBLE_AUCTION_V1_BID_V1
        data:
          $ref: "#/components/schemas/RaribleAuctionV1BidDataV1"

    AuctionBidData:
      type: object
      oneOf:
        - "$ref": "#/components/schemas/RaribleAuctionV1BidDataV1"

    RaribleAuctionV1BidDataV1:
      type: object
      required:
        - originFees
        - payouts
      properties:
        dataType:
          type: string
          description: "Data type of the auction bid data"
          enum:
            - RARIBLE_AUCTION_V1_BID_DATA_V1
        originFees:
          type: array
          description: "Value of the origin fees for the auction bid data"
          items:
            "$ref": "#/components/schemas/Part"
        payouts:
          type: array
          description: "Value of the payouts for the auction bid data"
          items:
            "$ref": "#/components/schemas/Part"


    Part:
      required:
        - account
        - value
      type: object
      properties:
        account:
          $ref: "#/components/schemas/Address"
        value:
          type: integer

    CreateTransactionRequest:
      required:
        - from
        - hash
        - input
        - nonce
      type: object
      properties:
        hash:
          $ref: "#/components/schemas/Word"
        from:
          $ref: "#/components/schemas/Address"
        nonce:
          type: integer
          format: int64
        to:
          $ref: "#/components/schemas/Address"
        input:
          $ref: "#/components/schemas/Binary"

    LogEvent:
      required:
        - transactionHash
        - status
        - address
        - topic
      type: object
      properties:
        transactionHash:
          $ref: "#/components/schemas/Word"
        status:
          type: string
          description: "Order transaction status"
          enum:
            - PENDING
            - CONFIRMED
            - REVERTED
            - DROPPED
            - INACTIVE
        address:
          $ref: "#/components/schemas/Address"
        topic:
          $ref: "#/components/schemas/Word"

    Word:
      type: string

    Binary:
      type: string

    BigInteger:
      type: string
      example: 717802

    BigDecimal:
      type: string
      example: 717802.342336

    Address:
      type: string
      example: '0x60f80121c31a0d46b5279700f9df786054aa5ee5'

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/EthereumApiErrorBadRequest"
    ServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/EthereumApiErrorServerError"
    EntityNotFound:
      description: Not Found
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/EthereumApiErrorEntityNotFound"
